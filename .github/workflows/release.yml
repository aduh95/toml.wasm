on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install wasm-pack
        run:
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build project
        run: npm run build
        env:
          CI: true
      - name: Create tarball
        run: npm pack && mv aduh95-toml-*.tgz aduh95-toml-release.tar.gz
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: npm-tarball
          path: aduh95-toml-release.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - name: Install GH Actions toolkit
        run: npm install @actions/core --no-save
      - name: Read release info
        run: >
          node -e 'const core = require("@actions/core"); const { join } =
          require("path"); const { readFileSync } = require("fs"); const {
          version } = require(join(process.env.GITHUB_WORKSPACE,
          "package.json")); const tag = version.match(/alpha|beta|rc/); const [,
          changes] = readFileSync(join(process.env.GITHUB_WORKSPACE,
          "CHANGELOG.md"), "utf8").split("\n### "); core.setOutput("VERSION",
          version); core.setOutput("RELEASE_NOTES",
          changes.substring(changes.indexOf("\n")));
          core.setOutput("IS_PRE_RELEASE", !!tag); core.setOutput("NPM_FLAGS",
          tag ? `--tag ${tag[0]}` : "")'
        id: release_info
      - name: Download tarball
        uses: actions/download-artifact@v1
        with:
          name: npm-tarball
      - name: Publish to NPM
        if: success()
        id: publish
        run:
          npm publish npm-tarball/aduh95-toml-release.tar.gz ${{
          steps.release_info.outputs.NPM_FLAGS }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.release_info.outputs.RELEASE_NOTES }}
          draft: false
          prerelease: ${{ steps.release_info.outputs.IS_PRE_RELEASE }}
      - name: Upload Release Asset
        if: success()
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./npm-tarball/aduh95-toml-release.tar.gz
          asset_name: aduh95-toml.tar.gz
          asset_content_type: application/gzip
